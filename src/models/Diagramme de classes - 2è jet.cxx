/* generated by dia/codegen.py */
/*(NULL)*/
class Customer : Person 
{
};

/*(NULL)*/
class Profile : Person 
{
private:
	String siret;
	String website;
	ByteArray logo;
};

class Product 
{
private:
	int id;
	String nom;
	float prix;
	String commentaire;
};

class Invoice 
{
private:
	int id;
	String reference;
	Date date;
	String objet;
	float montant;
	String mode_paiement;
	bool pay√©e;
	String type;
};

class Template 
{
private:
	int id;
	String nom;
	String type;
	String content;
};

class LatexInvoiceParser : InvoiceParser 
{
};

class HTMLInvoiceParser : InvoiceParser 
{
};

class DBManager 
{
};

class CustomersManager : Manager 
{
public:
	Customer get (int id);
	bool save (Customer client);
};

/*(NULL)*/
class Person 
{
private:
	int id;
	String name;
	String address;
	String zip_code;
	String city;
	String mail;
	String phone;
};

class Manager 
{
};

class QfactureCore 
{
public:
	bool saveCustomer (Customer customer);
	Customer getCustomer (int id);
	list<Customer> getCustomers ();
	bool saveProduct (Product product);
	Product getProduct (int id);
	list<Product> getProducts ();
	bool saveInvoice (Invoice invoice);
	Invoice getInvoice (int id);
	list<Invoice> getInvoices ();
	void InvoiceToPdf (Invoice invoice,
	                   InvoiceParser parser);
	bool saveTemplate (Template template);
	Template getTemplate (int id);
	list<Template> getTemplates ();
	Profile getProfile (int id);
	bool saveProfile (Profile profile);
	void connectDB (String server,
	                int port,
	                String login,
	                String pass,
	                String db,
	                String db_type);
	void disconnectDB ();
};

class ProductsManager : Manager 
{
public:
	Product get (int id);
	bool save (Product article);
};

class InvoiceParser 
{
public:
	String parse (Invoice invoice,
	              String template);
};

class InvoicesManager : Manager 
{
public:
	Invoice get (int id);
	bool save (Invoice facture);
};

